CREATE SEQUENCE GROUPS_SEQUENCE START 1 INCREMENT 1;

CREATE TABLE GROUPS (
    GROUP_ID INT NOT NULL DEFAULT GROUPS_SEQUENCE.nextval,
    NAME VARCHAR(255) NULL,
    ACTIVE int DEFAULT 1,
    PRIMARY KEY (GROUP_ID));

CREATE SEQUENCE PARTICIPANTS_SEQUENCE START 1 INCREMENT 1;

CREATE TABLE PARTICIPANTS (
    PARTICIPANT_ID INT NOT NULL DEFAULT PARTICIPANTS_SEQUENCE.nextval,
    NAME VARCHAR(225) NULL,
    MAIL VARCHAR(225) NULL,
    SCORE INT NULL DEFAULT 0,
    GROUP_ID INT NULL DEFAULT NULL,
    PRIMARY KEY (PARTICIPANT_ID),
    FOREIGN KEY (GROUP_ID) REFERENCES GROUPS(GROUP_ID));

CREATE SEQUENCE ROUNDS_SEQUENCE START 1 INCREMENT 1;

CREATE TABLE ROUNDS (
    ROUND_ID INT NOT NULL DEFAULT ROUNDS_SEQUENCE.nextval,
    NAME VARCHAR(255) NULL,
    CLOSED int DEFAULT 0,
    ROUND_NO INT NOT NULL,
    ROUND_START_DATE DATETIME NULL,
    PRIMARY KEY (ROUND_ID));

CREATE SEQUENCE MATCHES_SEQUENCE START 1 INCREMENT 1;

CREATE TABLE MATCHES (
    MATCH_ID INT NOT NULL DEFAULT MATCHES_SEQUENCE.nextval,
    PLAYER_ONE_PARTICIPANT_ID INT NULL,
    PLAYER_TWO_PARTICIPANT_ID INT NULL,
    PLAYER_ONE_SCORE INT NULL,
    PLAYER_TWO_SCORE INT NULL,
    ROUND_ID INT NULL,
    MATCH_DATE DATETIME NULL,
    WINNER_PARTICIPANT_ID INT NULL,
    PRIMARY KEY (MATCH_ID),
    FOREIGN KEY (ROUND_ID) REFERENCES ROUNDS(ROUND_ID));